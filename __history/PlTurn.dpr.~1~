program PlTurn;

{$APPTYPE CONSOLE}
{$R *.res}

uses
  System.SysUtils;

const
  MaxPlayerCount = 10;

type
  TLanguage = (Russian, English);

  TPlayersNames = array [1 .. MaxPlayerCount] of string;
  TPlayersScore = array [1 .. MaxPlayerCount] of integer;
  TLettersSets = array [1 .. MaxPlayerCount] of string;

var
  Language: TLanguage;
  PlayersCount: SmallInt = 5;
  PlayerName: TPlayersNames;
  PlayerScore: TPlayersScore;
  LettersSet: TLettersSets;

  Playfield: string;

  i: integer;

function LangChoose(): TLanguage;
var Lang: SmallInt;
    Ent: boolean;
begin
  Ent := false;
  writeln('Пожалуйста, выберите язык используемого алфавита.');
    write('Для этого введите 1, если хотите русский алфавит, или 2, если хотите английский: ');
  repeat
    readln(Lang);
    case Lang of
    1: begin
         Result := Russian;
         Ent := true;
       end;
    2: begin
         Result := English;
         Ent := true;
       end;
    else
      write('Некорректный ввод. Повторите попытку: ');
    end;
  until Ent;

  {optional message
    can be removed}
  write('Выбранный алфавит: ');
  case Result of
    Russian: writeln('русский');
    English: writeln('английский');
  end;

  Sleep(500);
  writeln('-----------------------------------------');
  writeln;
end;

procedure FillPlayfield(var Playfield: string; Language: TLanguage);
const
  RusABCConsonants = 'бвгджзйклмнпрстфхцчшщъь';
  RusABCVowels = 'аеёиоуыэюя';
  EngABCConsonants = 'bcdfghjklmnpqrstvwxz';
  EngABCVowels = 'aeiouy';
var
  i: byte;
begin
  case Language of
    Russian:
    begin
      for i := 1 to 4 do
        Playfield := Concat(Playfield, RusABCConsonants);
      for i := 1 to 8 do
        Playfield := Concat(Playfield, RusABCVowels);
    end;
    English:
    begin
      for i := 1 to 4 do
        Playfield := Concat(Playfield, EngABCConsonants);
      for i := 1 to 8 do
        Playfield := Concat(Playfield, EngABCVowels);
    end;
  end;
end;

procedure FillLettersSet(var Playfield: string; var LettersSet: string);
const
  MaxLettersCount = 10;
var
  ltrPos: integer;

begin
  while MaxLettersCount - length(LettersSet) > 0 do
  begin
    ltrPos := random(Length(Playfield)) + 1;
    Insert(Playfield[ltrPos], LettersSet, 1);
    Delete(Playfield, ltrPos, 1);
  end;

  Sleep(500);
  writeln('-----------------------------------------');
end;

procedure PlayerTurn(Language: TLanguage; Playfield: string; LettersSet: string; PlayerScore: integer);
const StrsCount = 80000;
type
  TDict = array [1..StrsCount] of string;
var
  Dictionary: text;
  Dict: TDict;

  PlayerWord, AddWord, TempSet: string;
  i, FramePos, CurrPos: integer;
  Points: byte;
  Ent, RightLetters, Found: boolean;

begin
  write('Введите слово: ');
  repeat
    readln(PlayerWord);

    PlayerWord := Trim(PlayerWord);
    Ent := true;
    i := 1;
    while Ent and (i <= length(PlayerWord)) do
      if Pos(PlayerWord[i], Playfield) = 0 then
      begin
        Ent := false;
        write('Некорректный ввод. Введите слово ещё раз: ');
      end
      else  
        Inc(i);

  until Ent;

  Points := Length(PlayerWord);
  TempSet := LettersSet;

  i := 1; RightLetters := true;
  while RightLetters and (i <= length(PlayerWord)) do
  begin                                               writeln(i);
    if Pos(PlayerWord[i], LettersSet) = 0 then
      RightLetters := false
    else
    begin
      Delete(LettersSet, Pos(PlayerWord[i], LettersSet), 1);
      Inc(i);
    end;
  end;
                                              writeln(RightLetters);
  if not RightLetters then
  begin 
    Dec(PlayerScore, Points);
    writeln('Ваше слово неверно. Количество Ваших очков уменьшается на ', Points,' и теперь составляет ', PlayerScore);
    LettersSet := TempSet;
  end
  else
  begin
    if Language = Russian then
      AssignFile(Dictionary, '..\..\dictionaries\russian.txt')
    else 
      AssignFile(Dictionary, '..\..\dictionaries\english.txt');

    Reset(Dictionary);
    FramePos := 1;
    while not Eof(Dictionary) do
    begin
      readln(Dictionary, Dict[FramePos]);
      Inc(FramePos);
    end;                                                           writeln(FramePos);

    Found := false;
    i := 1;
    while (not Found) and (i < FramePos) do
    begin
    //  CurrWord := '';
                                                                     // writeln('Word: ', CurrWord);
      if PlayerWord = Dict[i] then 
        Found := true;
        
    end;
    
  
    if not Found then
    begin
      write('Такого слова нет в словаре. Желаете добавить его в словарь (да/нет)? ');
      repeat
        readln(AddWord);
        Ent := true;

        if AddWord = 'да' then
        begin
          Dict[i] := PlayerWord;
          Inc(i); 
          Inc(PlayerScore, Points);
          writeln('Теперь Ваше слово верно! Количество Ваших очков увеличивется на ', Points,' и теперь составляет ', PlayerScore);

          FillLettersSet(Playfield, LettersSet);

          Close(Dictionary);
        end
        else if AddWord = 'нет' then
        begin
          Dec(PlayerScore, Points);
          writeln('Значит, ваше слово неверно. Количество Ваших очков уменьшается на ', Points,' и теперь составляет ', PlayerScore);
          LettersSet := TempSet;
        end
        else 
        begin
          Ent := false;
          write('Некорректный ввод. Повторите попытку (да/нет): ');
        end;
      until Ent;
    end
    else
    begin
      Inc(PlayerScore, Points);
      writeln('Ваше слово верно! Количество Ваших очков увеличивется на ', Points,' и теперь составляет ', PlayerScore);

      FillLettersSet(Playfield, LettersSet);

    end;

  end;

end;

begin
  Language := LangChoose();

  { choosing players here }

  { filling playfield of letters }
  FillPlayfield(Playfield, Language);

  { giving a player a set of letters }
  for i := 1 to PlayersCount do
  begin
    FillLettersSet(Playfield, LettersSet[i]);
    writeln('Строка ',i, '-го игрока: ', LettersSet[i]);
  end;

  PlayerTurn(Language, Playfield, LettersSet[2], PlayerScore[2]);

  writeln('здесь конец программы');
  readln;
end.
